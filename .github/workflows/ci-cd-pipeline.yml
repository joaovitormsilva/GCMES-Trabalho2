name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies for frontend
      working-directory: guaradata-frontend-main
      run: npm install

    - name: Build frontend
      working-directory: guaradata-frontend-main
      run: npm run build

    - name: Run frontend in development mode
      working-directory: guaradata-frontend-main
      run: npm run dev &
      env:
        CI: true

  #  - name: Install dependencies for backend
  #    working-directory: guaradata-backend-main
  #    run: npm install

  #  - name: Run backend tests
  #    working-directory: guaradata-backend-main
  #    run: npm test

    - name: Set up Sonar Scanner
      run: |
        curl -sSLo /tmp/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip /tmp/sonar-scanner-cli.zip -d /tmp
        sudo mv /tmp/sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
        sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

    - name: Verify Sonar Scanner installation
      run: sonar-scanner --version

    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
        -Dsonar.organization=joaovitormsilva \
        -Dsonar.projectKey=joaovitormsilva_GCMES-Trabalho2 \
        -Dsonar.sources=guaradata-backend-main,guaradata-frontend-main \
        -Dsonar.tests=guaradata-backend-main/tests,guaradata-frontend-main/tests \
        -Dsonar.inclusions=**/*.js \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
